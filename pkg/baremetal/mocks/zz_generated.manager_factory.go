// /*
// Copyright 2019 The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/baremetal/manager_factory.go

// Package baremetal_mocks is a generated GoMock package.
package baremetal_mocks

import (
	reflect "reflect"

	logr "github.com/go-logr/logr"
	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/metal3-io/cluster-api-provider-metal3/api/v1beta1"
	v1beta10 "github.com/openshift/api/machine/v1beta1"
	baremetal "github.com/openshift/cluster-api-provider-baremetal/pkg/baremetal"
)

// MockManagerFactoryInterface is a mock of ManagerFactoryInterface interface.
type MockManagerFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockManagerFactoryInterfaceMockRecorder
}

// MockManagerFactoryInterfaceMockRecorder is the mock recorder for MockManagerFactoryInterface.
type MockManagerFactoryInterfaceMockRecorder struct {
	mock *MockManagerFactoryInterface
}

// NewMockManagerFactoryInterface creates a new mock instance.
func NewMockManagerFactoryInterface(ctrl *gomock.Controller) *MockManagerFactoryInterface {
	mock := &MockManagerFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockManagerFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManagerFactoryInterface) EXPECT() *MockManagerFactoryInterfaceMockRecorder {
	return m.recorder
}

// NewRemediationManager mocks base method.
func (m *MockManagerFactoryInterface) NewRemediationManager(arg0 *v1beta1.Metal3Remediation, arg1 *v1beta10.Machine, arg2 logr.Logger) (baremetal.RemediationManagerInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewRemediationManager", arg0, arg1, arg2)
	ret0, _ := ret[0].(baremetal.RemediationManagerInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewRemediationManager indicates an expected call of NewRemediationManager.
func (mr *MockManagerFactoryInterfaceMockRecorder) NewRemediationManager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewRemediationManager", reflect.TypeOf((*MockManagerFactoryInterface)(nil).NewRemediationManager), arg0, arg1, arg2)
}
